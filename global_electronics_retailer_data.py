# -*- coding: utf-8 -*-
"""Global Electronics Retailer Data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12SoThmy9bqnwjuqtGIDr0X774EOdifLz
"""

import pandas as pd

customer_df = pd.read_csv('/content/drive/MyDrive/Global+Electronics+Retailer/Customers.csv', encoding = 'iso-8859-1')
customer_df.head()

from google.colab import drive
drive.mount('/content/drive')

"""###**Cleaning Sales Table**"""

sale_df = pd.read_csv('/content/Sales.csv')
sale_df.head()

sale_df.info()

print(sale_df.isnull().sum())

print(sale_df.duplicated().sum())

sale_df['Order Date'] = pd.to_datetime(sale_df['Order Date'], errors='coerce').dt.strftime('%Y-%m-%d')
sale_df['Delivery Date'] = pd.to_datetime(sale_df['Delivery Date'], errors='coerce').dt.strftime('%Y-%m-%d')

sale_df['Order Date'] = pd.to_datetime(sale_df['Order Date'], errors='coerce', format='%Y-%m-%d')
sale_df['Delivery Date'] = pd.to_datetime(sale_df['Delivery Date'], errors='coerce', format='%Y-%m-%d')

sale_df.info()

sale_df.head()

# Replace StoreKey value of 0 with 67 in the Sales DataFrame
sale_df['StoreKey'] = sale_df['StoreKey'].replace(0, 67)

sale_df.head()

sale_df.to_csv('sales_cleaned.csv', index=False)

"""###**Cleaning Exchange Rates**"""

import pandas as pd
ex_df = pd.read_csv('/content/Exchange_Rates.csv')
ex_df.head()

ex_df.info()

print(ex_df.isnull().sum())

print(ex_df.duplicated().sum())

ex_df['Date'] = pd.to_datetime(ex_df['Date'], errors='coerce').dt.strftime('%Y-%m-%d')

ex_df.head()

ex_df['Date'] = pd.to_datetime(ex_df['Date'], errors='coerce', format='%Y-%m-%d')

ex_df.head()

ex_df.info()

ex_df['Exchange'] = ex_df['Exchange'].round(2)

ex_df.head()

ex_df.info()

duplicate_rows = ex_df.duplicated(subset=['Date', 'Currency'])
print("Duplicates found:", duplicate_rows.sum())

# Check for duplicates based on Currency and Date
duplicate_rows = ex_df[ex_df.duplicated(subset=['Currency', 'Date'], keep=False)]
print(duplicate_rows)

ex_df.to_csv('ExchangeRate_cleaned.csv', index=False)

"""###**Cleaning Store Table**"""

store_df = pd.read_csv('/content/Electronic_Data/Stores.csv')
store_df.head()

store_df['Open Date'] = pd.to_datetime(store_df['Open Date'], errors='coerce').dt.strftime('%Y-%m-%d')

store_df.head()

store_df['Open Date'] = pd.to_datetime(store_df['Open Date'], errors='coerce', format='%Y-%m-%d')

store_df.head()

store_df.info()

store_df['Square Meters'].fillna(0, inplace=True)
store_df.tail()

store_df['Square Meters'] = store_df['Square Meters'].astype(int)

print(store_df['Square Meters'].dtypes)
print(store_df.head())

store_df.info()

import numpy as np
store_df['StoreKey'] = store_df['StoreKey'].replace(0, np.nan)  # Temporarily replace 0 with NaN
store_df['StoreKey'] = store_df['StoreKey'].fillna(store_df['StoreKey'].max() + 1).astype(int)

store_df.tail()

store_df.info()

store_df.to_csv('store_cleaned.csv', index=False)

"""###**Cleaning Product Table**"""

product_df = pd.read_csv('/content/Products.csv')
product_df.head()

product_df.info()

print(product_df.isnull().sum())

print(product_df.duplicated().sum())

product_df['Unit Cost USD'] = product_df['Unit Cost USD'].replace('[\$,]', '', regex=True).astype(float)
product_df['Unit Price USD'] = product_df['Unit Price USD'].replace('[\$,]', '', regex=True).astype(float)

product_df.head()

product_df.info()

product_df.to_csv('product_cleaned.csv', index=False)

"""### **Cleaning Customer Table**"""

print(customer_df.Country.unique()) #UniqueValues for countries

print(customer_df.State.unique())

print(customer_df.Continent.unique())

print(customer_df.shape)

print(customer_df.info())

print(customer_df.isnull().sum())

customer_df.dropna(inplace=True)
print(customer_df.isnull().sum())

print(customer_df.duplicated().sum())

customer_df['Birthday'] = pd.to_datetime(customer_df['Birthday'], errors='coerce', format='%Y-%m-%d')
customer_df['Gender'] = customer_df['Gender'].astype('category')
customer_df['City'] = customer_df['City'].str.title()
customer_df['Country'] = customer_df['Country'].str.title()
customer_df['State'] = customer_df['State'].str.title()
customer_df['Continent'] = customer_df['Continent'].str.title()
customer_df['Name'] = customer_df['Name'].str.title()
print(customer_df.info())

customer_df.head()

customer_df.drop(['State Code'], axis=1, inplace=True)
customer_df.head()

customer_df['City'] = customer_df['City'].str.replace(r'[^a-zA-Z\s]', '', regex=True)
customer_df

earliest_birth = customer_df['Birthday'].min()
latest_birth = customer_df['Birthday'].max()
print(earliest_birth)
print(latest_birth)

customer_df.to_csv('cleaned_customers.csv', index=False)

"""**Cleaning Data_Dictionary**"""